@page "/tables"
@using Domain.Data.Identity
@using Domain.Dto.Response.Management
@using MobileApplication.Service
@using SharedApplicationsData.Service.Identity

@inject IdentityManager IdentityManager
@inject TableService TableService

<PageTitle>Доступные столики</PageTitle>

<h3>Доступные столики</h3>

@if (availableTables is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        @foreach (var availableTable in availableTables)
        {
            <div class="col-sm-4" style="margin-bottom:10px;">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@availableTable.Name</h5>
                        <p class="card-text">@availableTable.Description</p>
                        <a href="@($"neworder?tableId={availableTable.Id}")" class="btn btn-success">Открыть заказ</a>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<TableInfo>? availableTables;

    protected override async Task OnInitializedAsync()
    {
        if (!IdentityManager.CheckAuthorizationWithRedirect(RoleConstants.Administrator, RoleConstants.Waiter))
        {
            return;
        }

        availableTables = await TableService.GetAvailableTablesAsync();
    }
}
